---
// No frontmatter logic needed for this component
---

<form
  id="newsletter-form"
  class="flex flex-col sm:flex-row gap-4 justify-center items-center max-w-md mx-auto newsletter-form"
>
  <div class="form-group">
    <input
      type="email"
      id="email-input"
      name="email-input"
      placeholder="Your email address"
      required
      class="flex-1 px-4 py-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 border border-gray-600 focus:border-yore-primary focus:outline-none email-input"
    />

    <button
      type="submit"
      class="submit-button bg-yore-primary hover:bg-yore-primary/90 text-white px-8 py-3 rounded-lg transition-colors whitespace-nowrap"
      id="submit-button"
    >
      Join
    </button>
  </div>
  <div id="form-message" class="message" style="display: none;"></div>
</form>

<style>
  .newsletter-form {
    max-width: 400px;
    margin: 0 auto;
  }

  .form-group {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  /* .email-input {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
  } */

  .email-input::placeholder {
    color: rgba(255, 255, 255, 0.7);
  }

  /* .submit-button {
    padding: 0.75rem 1.5rem;
    background-color: #eab308;
    color: #1e293b;
    border: none;
    border-radius: 0.375rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s;
  } */

  .submit-button:hover:not(:disabled) {
    background-color: #ca8a04;
  }

  .submit-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .message {
    padding: 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    text-align: center;
    margin-top: 0.5rem;
  }

  .message.success {
    background-color: rgba(34, 197, 94, 0.1);
    color: #22c55e;
    border: 1px solid rgba(34, 197, 94, 0.3);
  }

  .message.error {
    background-color: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border: 1px solid rgba(239, 68, 68, 0.3);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form: HTMLFormElement | null =
      document.querySelector("#newsletter-form");
    const emailInput: HTMLInputElement | null =
      document.querySelector("#email-input");
    const submitButton: HTMLButtonElement | null =
      document.querySelector("#submit-button");
    const messageDiv: HTMLDivElement | null =
      document.querySelector("#form-message");

    if (form && emailInput && submitButton) {
      form.addEventListener("submit", async function (e) {
        e.preventDefault();

        const email = emailInput.value.trim();
        if (!email) {
          showMessage("Please enter your email address.", "error");
          return;
        }

        // Disable button and show loading state
        submitButton.disabled = true;
        submitButton.textContent = "Signing up...";

        try {
          const formData = new FormData();
          formData.append("email", email);

          const response = await fetch("/api/newsletter", {
            method: "POST",
            body: formData,
          });

          const result = await response.json();

          if (response.ok) {
            showMessage(
              "Thanks for signing up! Check your email for confirmation.",
              "success"
            );
            emailInput.value = "";
          } else {
            showMessage(
              result.error || "Something went wrong. Please try again.",
              "error"
            );
          }
        } catch (error) {
          showMessage("Network error. Please try again.", "error");
        } finally {
          // Re-enable button
          submitButton.disabled = false;
          submitButton.textContent = "Sign up";
        }
      });
    }

    function showMessage(message, type) {
      if (messageDiv) {
        messageDiv.textContent = message;
        messageDiv.className = `message ${type}`;
        messageDiv.style.display = "block";

        // Hide message after 5 seconds
        setTimeout(() => {
          messageDiv.style.display = "none";
        }, 5000);
      }
    }
  });
</script>
